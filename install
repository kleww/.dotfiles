#!/bin/bash
# URL: https://github.com/kleww/.dotfiles
# Author: Kevin Viricel
# Description: This script install all dotfiles on the current system

#######################################
# Resolve binary path even if there are symlinks and setup BINARY_PATH global
# Globals:
#   BINARY_PATH
# Arguments:
#   None
# Returns:
#   None
#######################################
function _get_binary_path() {
  local source="${BASH_SOURCE[0]}"
  while [ -h "$source" ]; do
    local dir="$( cd -P "$( dirname "$source" )" && pwd )"
    source="$(readlink "$source")"
    [[ $source != /* ]] && source="$dir/$source"
  done
  BINARY_PATH="$( cd -P "$( dirname "$source" )" && pwd )"
}

#######################################
# Check if all required programs are installer and can be reach by this script
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   None
#######################################
function _check_required_programs() {
  local req_progs=(readlink date)
  for p in ${req_progs[@]}; do
    hash "${p}" 2>&- || \
    { echo >&2 " Required program \"${p}\" not installed or in search PATH.";
    exit 1;
  }
done
}

#######################################
# Prompt user for confimation
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   0 if user accept
#   1 if user refuse
#######################################
_confirm() {
  while true; do
    read -p "$1 [Y/n]" yn
    case $yn in
      [Yy]* ) return 0;;
      [Nn]* ) return 1;;
    esac
  done
}

_import_dotfiles() {
  local dotfiles=".bash_profile .bashrc .vimrc"
  for dotfile in $dotfiles; do
  if [ -f $BINARY_PATH/$dotfile ]; then
    _confirm "Do you want to import $dotfile ?"
  fi
  done
}

function main() {
  _check_required_programs
  _get_binary_path

  _import_dotfiles
  _confirm "Do you want to install Vundle ?"
}

main "$@"
